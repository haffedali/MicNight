{
  "_args": [
    [
      {
        "raw": "kdbush@^3.0.0",
        "scope": null,
        "escapedName": "kdbush",
        "name": "kdbush",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\programs\\projects\\MicNight\\node_modules\\supercluster"
    ]
  ],
  "_from": "kdbush@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "kdbush@3.0.0",
  "_location": "/kdbush",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/kdbush_3.0.0_1536310495834_0.4486660538682752"
  },
  "_npmUser": {
    "name": "mourner",
    "email": "agafonkin@gmail.com"
  },
  "_npmVersion": "6.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "kdbush@^3.0.0",
    "scope": null,
    "escapedName": "kdbush",
    "name": "kdbush",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/supercluster"
  ],
  "_resolved": "https://registry.npmjs.org/kdbush/-/kdbush-3.0.0.tgz",
  "_shasum": "f8484794d47004cc2d85ed3a79353dbe0abc2bf0",
  "_shrinkwrap": null,
  "_spec": "kdbush@^3.0.0",
  "_where": "C:\\programs\\projects\\MicNight\\node_modules\\supercluster",
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "bugs": {
    "url": "https://github.com/mourner/kdbush/issues"
  },
  "dependencies": {},
  "description": "A very fast static 2D index for points based on kd-tree.",
  "devDependencies": {
    "eslint": "^5.5.0",
    "eslint-config-mourner": "^3.0.0",
    "esm": "^3.0.82",
    "rollup": "^0.65.2",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-terser": "^2.0.2",
    "tape": "^4.9.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-hRkd6/XW4HTsA9vjVpY9tuXJYLSlelnkTmVFu4M9/7MIYQtFcHpbugAU7UbOfjOiVSVYl2fqgBuJ32JUmRo5Ew==",
    "shasum": "f8484794d47004cc2d85ed3a79353dbe0abc2bf0",
    "tarball": "https://registry.npmjs.org/kdbush/-/kdbush-3.0.0.tgz",
    "fileCount": 9,
    "unpackedSize": 16951,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbkjzgCRA9TVsSAnZWagAAav4P/A3fZnP6ViURv6gD1Dcp\n/fwocGVrxIbzpU/tWQREkDjfRh+hKUWfaOjrvqRHZcCvF3JAN3tD6cbDc5NQ\nO2ANqagLXmwwrwNfE95usR+qBoBgkV1YE5PTqZK5KI7LyLKML9WGEh4FcPIg\nI8HurwyBvuoX3RnWT29Ao+csjnd1ZFhJDMetTEylL4+VjMYPq6iEBw0kfIa+\npmbLvWcZE2GkxDaWFratZ8cqQ1RvdAEipCBvGujZQh95bYoOboL/WgJi8umy\nsy3mApBkiiOqbbhCTitN2gqtkg2OplDTuxqKLcj2+elmzNfsKugQOtpMOQB2\nuKeP0nLAQ5HdtsDPeSu84/a+/ktXgl0Q5UhEWqrGEQIRppX5sIJwyZVmyaIv\nKtfPcaYj88biRD+Hy21eJdJsRkOPq6JwZ/DYrz2HZlSLdhhyxeDB67c1PsRX\nHXeTGjSiWf7H9U8o5Y5OJBauDmpKFY82fr1UOK9+eN/hbZY9C1zXqNZZERAd\nnZv4kqNZs5S1SAKoeXoFged90I4jZO1M/tZrhtvEYxxNvnfh/f+6d3ScxTP3\nd0AtUkgzmXEnrlxkZKocFQ/srl9g6bcsd+982+nphjOu6CawIkLDVILvHfCO\nwHDUYVVPkfT3Zgwur0x2hAe6bWPCcrvNU8j8QPWX1CLjbZ4DJzNTkJTi2E2J\nkn+2\r\n=ouTa\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "extends": "mourner"
  },
  "files": [
    "kdbush.js",
    "kdbush.min.js",
    "src"
  ],
  "gitHead": "5ff01fb69666443270db1f136b79ba4588645ab8",
  "homepage": "https://github.com/mourner/kdbush#readme",
  "jsdelivr": "kdbush.min.js",
  "keywords": [
    "index",
    "points",
    "kd-tree",
    "data structures",
    "algorithms",
    "spatial",
    "geometry"
  ],
  "license": "ISC",
  "main": "kdbush.js",
  "maintainers": [
    {
      "name": "mourner",
      "email": "agafonkin@gmail.com"
    }
  ],
  "module": "src/index.js",
  "name": "kdbush",
  "optionalDependencies": {},
  "readme": "## KDBush [![Build Status](https://travis-ci.org/mourner/kdbush.svg?branch=master)](https://travis-ci.org/mourner/kdbush) [![Simply Awesome](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects)\n\nA very fast static spatial index for 2D points based on a flat KD-tree.\nCompared to [RBush](https://github.com/mourner/rbush):\n\n- points only — no rectangles\n- static — you can't add/remove items\n- indexing is 5-8 times faster\n\n```js\nconst index = new KDBush(points);         // make an index\nconst ids1 = index.range(10, 10, 20, 20); // bbox search - minX, minY, maxX, maxY\nconst ids2 = index.within(10, 10, 5);     // radius search - x, y, radius\n```\n\n## Install\n\nInstall using NPM (`npm install kdbush`) or Yarn (`yarn add kdbush`), then:\n\n```js\n// import as a ES module\nimport KDBush from 'kdbush';\n\n// or require in Node / Browserify\nconst KDBush = require('kdbush');\n```\n\nOr use a browser build directly:\n\n```html\n<script src=\"https://unpkg.com/kdbush@2.0.0/kdbush.min.js\"></script>\n```\n\n## API\n\n#### new KDBush(points[, getX, getY, nodeSize, arrayType])\n\nCreates an index from the given points.\n\n- `points`: Input array of points.\n- `getX`, `getY`: Functions to get `x` and `y` from an input point. By default, it assumes `[x, y]` format.\n- `nodeSize`: Size of the KD-tree node, `64` by default. Higher means faster indexing but slower search, and vise versa.\n- `arrayType`: Array type to use for storing coordinate values. `Float64Array` by default, but if your coordinates are integer values, `Int32Array` makes things a bit faster.\n\n```js\nconst index = kdbush(points, p => p.x, p => p.y, 64, Int32Array);\n```\n\n#### index.range(minX, minY, maxX, maxY)\n\nFinds all items within the given bounding box and returns an array of indices that refer to the items in the original `points` input array.\n\n```js\nconst results = index.range(10, 10, 20, 20).map(id => points[id]);\n```\n\n#### index.within(x, y, radius)\n\nFinds all items within a given radius from the query point and returns an array of indices.\n\n```js\nconst results = index.within(10, 10, 5).map(id => points[id]);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mourner/kdbush.git"
  },
  "scripts": {
    "bench": "node -r esm bench.js",
    "build": "rollup -c",
    "prepublishOnly": "npm run build",
    "pretest": "eslint src test.js bench.js rollup.config.js",
    "test": "tape -r esm test.js"
  },
  "unpkg": "kdbush.min.js",
  "version": "3.0.0"
}
